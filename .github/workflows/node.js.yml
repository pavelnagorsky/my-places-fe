# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Next.js CI/CD

on:
  push:
    branches: [ "prod" ]

env:
  NEXT_PUBLIC_BACKEND_BASE_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_BASE_URL }}
  NEXT_PUBLIC_GOOGLE_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_API_KEY }}
  NEXT_PUBLIC_EMAIL: ${{ secrets.NEXT_PUBLIC_EMAIL }}
  NEXT_PUBLIC_DOMAIN: ${{ secrets.NEXT_PUBLIC_DOMAIN }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  VPS_USER: ${{ secrets.VPS_USER }}
  VPS_HOST: ${{ secrets.VPS_HOST }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [23.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
#    - run: npm ci
#    - run: npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH agent
      run: |
        eval $(ssh-agent -s)
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    - name: Create target directory on VPS
      run: |
       ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "mkdir -p /var/www/www-root/data/www/my-places.by/"

    - name: Deploy to VPS
      run: |
        echo "Starting deployment..."
        rsync -avz -e "ssh -o StrictHostKeyChecking=no" --exclude=node_modules --exclude=.next . $VPS_USER@$VPS_HOST:/var/www/www-root/data/www/my-places.by/ --verbose
        ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "cd /var/www/www-root/data/www/my-places.by/ && npm ci && npm run build && pm2 restart all"
